name: Terraform Workflow

on:
  workflow_call:
    inputs:
      role_to_assume:
        required: true
        type: string
      aws_region:
        required: true
        type: string
      working_directory:
        required: true
        type: string


permissions:
   contents: read       # Required to checkout repository.
   id-token: write      # Required to request the JWT.

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./${{ inputs.working_directory }}
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.role_to_assume }} #change to reflect your IAM roleâ€™s ARN
          aws-region: ${{ inputs.aws_region }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.4 # specify your desired version

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan
        continue-on-error: true

      - name: Create Terraform Plan Artifact
        uses: actions/upload-artifact@v4
        if: steps.plan.outcome == 'failure'
        with:
          name: terraform-plan
          path: tfplan

      - name: Terraform Apply
        id: apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.plan.outcome != 'failure'
        run: terraform apply -auto-approve tfplan